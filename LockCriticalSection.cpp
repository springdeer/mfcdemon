#include "stdafx.h"
#include "LockCriticalSection.h"
#include <afxmt.h>
////////////////////////////////////////////////////////////
//互斥锁模型定义
////////////////////////////////////////////////////////////
CLockCriticalSection::CLockCriticalSection(void)
{
	InitializeCriticalSection(&m_cs);
	m_nLockCnt = 0;
}

CLockCriticalSection::~CLockCriticalSection(void)
{
	DeleteCriticalSection(&m_cs);
}

////////////////////////////////////////////////////////////
//互斥模型Lock操作
////////////////////////////////////////////////////////////
void CLockCriticalSection::Lock()
{
	EnterCriticalSection(&m_cs);

	m_nLockCnt++;
}

////////////////////////////////////////////////////////////
//互斥模型Unlock操作
////////////////////////////////////////////////////////////
void CLockCriticalSection::Unlock()
{
	m_nLockCnt--;

	LeaveCriticalSection(&m_cs);
}

////////////////////////////////////////////////////////////
//获得锁计数
//返回值:锁计数
////////////////////////////////////////////////////////////
int  CLockCriticalSection::GetLockCnt()const
{
	return m_nLockCnt;
}

////////////////////////////////////////////////////////////
//无锁模型定义
////////////////////////////////////////////////////////////
CLockNone::CLockNone(void)
{
	m_nLockCnt = 0;
}

CLockNone::~CLockNone(void)
{

}

////////////////////////////////////////////////////////////
//无锁模型Lock操作
////////////////////////////////////////////////////////////
void CLockNone::Lock()
{
	m_nLockCnt++;
}

////////////////////////////////////////////////////////////
//无锁模型解除操作
////////////////////////////////////////////////////////////
void CLockNone::Unlock()
{
	m_nLockCnt--;
}

////////////////////////////////////////////////////////////
//获得锁计数
////////////////////////////////////////////////////////////
int  CLockNone::GetLockCnt()const
{
	return m_nLockCnt;
}